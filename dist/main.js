(()=>{"use strict";const e=function(){function e(){let e=document.querySelectorAll(".form");console.log(e),e.length>0&&e.forEach((e=>{e.remove()}))}return{projectForm:function(){e();let t=document.createElement("form");return t.classList.add("form"),t},toDoForm:function(){e();let t=document.createElement("form");t.classList.add("form");let n=document.createElement("div"),o=document.createElement("label");o.setAttribute("for","title"),o.innerText="Title: ";let i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("name","title"),i.setAttribute("id","title"),i.setAttribute("required",!0),n.appendChild(o),n.appendChild(i);let r=document.createElement("div"),c=document.createElement("select");c.setAttribute("id","select");let d=document.createElement("label");d.setAttribute("for","select"),d.innerText="Priority: ";let l=document.createElement("option");l.setAttribute("value","Low"),l.setAttribute("name","low"),l.setAttribute("selected",!0),l.setAttribute("required",!0),l.innerText="Low";let a=document.createElement("option");a.setAttribute("value","Mid"),a.setAttribute("name","mid"),a.setAttribute("required",!0),a.innerText="Mid";let s=document.createElement("option");s.setAttribute("value","High"),s.setAttribute("name","priority"),s.setAttribute("required",!0),s.innerText="High",r.appendChild(d),r.appendChild(c),c.appendChild(l),c.appendChild(a),c.appendChild(s),c.setAttribute("name","priority");let p=document.createElement("div"),u=document.createElement("label");u.setAttribute("for","description"),u.innerText="Description: ";let m=document.createElement("input");m.setAttribute("type","text"),m.setAttribute("name","description"),m.setAttribute("id","description"),p.appendChild(u),p.appendChild(m);let h=document.createElement("div"),E=document.createElement("label");E.setAttribute("for","date"),E.innerText="Due date: ";let b=document.createElement("input");b.setAttribute("type","date"),b.setAttribute("id","date"),b.setAttribute("name","date"),h.appendChild(E),h.appendChild(b),document.createElement("div");let C=document.createElement("div");return t.appendChild(n),t.appendChild(r),t.appendChild(p),t.appendChild(h),t.appendChild(C),t}}}();(()=>{const t=[],n=[];let o=[];const i=document.createElement("section");i.classList.add("projectsSection"),root.appendChild(i);const r=document.createElement("section");r.classList.add("navBar");const c=document.createElement("button");c.innerText="NEW PROJECT",c.setAttribute("name","newProject"),c.onclick=l;const d=document.createElement("button");function l(o){o.preventDefault;let i=o.target.getAttribute("name");if(console.log(i),"newProject"===i){let t=e.projectForm();root.appendChild(t)}else{let o=e.toDoForm();const i=document.createElement("div"),r=document.createElement("label");r.innerText="Project ";const c=document.createElement("select");c.setAttribute("name","project"),t.forEach((e=>{let t=document.createElement("option");t.innerText=`${e.name}`,c.appendChild(t)}));const d=document.createElement("input");d.setAttribute("type","submit"),d.innerText="Add To-Do",o.appendChild(i),i.appendChild(r),i.appendChild(c),o.appendChild(d),root.appendChild(o),o.onsubmit=e=>{e.preventDefault();let i=o.elements.date.value,r=o.elements.title.value,c=o.elements.description.value,d=o.elements.priority.value,l=o.elements.project.value,a=new s(r,c,i,d,l);console.log(a),u(t,n)}}}d.setAttribute("name","newToDo"),d.innerText="NEW TO-DO",d.onclick=l,r.appendChild(c),r.appendChild(d),root.appendChild(r);const a=document.createElement("section");a.classList.add("toDosSection"),root.appendChild(a);class s{constructor(e,t,o,i,r="any"){this.title=e,this.description=t,this.dueDate=o,this.priority=i,this.project=r,this.any="any",n.push({...this})}}class p{constructor(e){this.name=e,t.push(this)}}function u(e,t){document.querySelector("#root");const n=document.querySelector(".toDoArticle");n&&n.remove();const i=document.createElement("article");i.classList.add("toDoArticle"),t.forEach((n=>{const r=document.createElement("div");r.classList.add("toDoCard");const c=document.createElement("h2");c.innerText=`${n.title}`,r.appendChild(c);const d=document.createElement("p");d.innerText=`description: ${n.description}`,r.appendChild(d);const l=document.createElement("p");l.innerText=`Due date: ${n.dueDate}`,r.appendChild(l);const s=document.createElement("p");if(s.innerText=`Priority: ${n.priority}`,r.appendChild(s),"any"!==n.project){const e=document.createElement("p");e.innerText=`Assigned project: ${n.project}`,r.appendChild(e)}const p=document.createElement("form"),m=document.createElement("label");m.setAttribute("for","projects"),m.innerText="choose project: ";const h=document.createElement("select");h.setAttribute("name","projects"),h.setAttribute("id","projects"),h.classList.add("select");const E=document.createElement("option");E.classList.add("option"),E.setAttribute("value","any"),E.innerText="Any",h.appendChild(E),e.forEach((e=>{const t=document.createElement("option");t.classList.add("option"),t.setAttribute("value",`${e.name}`),t.innerText=`${e.name}`,h.appendChild(t)})),p.onchange=function(i){const r=i.target.value;if(n.project=r,o){console.log(o);const i=o.findIndex((e=>e.title===n.title));console.log(i),t[i]=n,o=t,console.log(o),u(e,o)}const c=t.findIndex((e=>e.title===n.title));t[c]=n,o=t,console.log(o),u(e,o)},p.appendChild(m),p.appendChild(h),r.appendChild(p),i.appendChild(r),a.appendChild(i)}))}new p("proyecto 1"),new p("proyecto 2"),function(e,n){const o=document.querySelector(".projectsContainer");o&&o.remove();const r=document.createElement("div");r.classList.add("projectsContainer");const c=document.createElement("button");if(c.innerText="Any",c.classList.add("projectBtn"),c.setAttribute("any","any"),c.addEventListener("click",(()=>{let e=n.filter((e=>"any"===e.any));u(t,e)})),r.appendChild(c),e.length>0){function d(e){e.preventDefault;let o=e.target.getAttribute("project-name"),i=n.filter((e=>e.project===o));u(t,i)}e.forEach((e=>{const t=document.createElement("button");t.innerText=e.name,t.classList.add("projectBtn"),t.addEventListener("click",d),t.setAttribute("project-name",e.name),r.appendChild(t)}))}i.appendChild(r)}(t,n),u(t,n)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,