(()=>{"use strict";var e={d:(t,o)=>{for(var n in o)e.o(o,n)&&!e.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:o[n]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};function o(e,t){console.log(t);const o=document.querySelector("#root"),n=document.createElement("div");n.classList.add("toDoCard");const s=document.createElement("h2");s.innerText=`${e.title}`,n.appendChild(s);const d=document.createElement("p");d.innerText=`description: ${e.description}`,n.appendChild(d);const c=document.createElement("p");c.innerText=`Due date: ${e.dueDate}`,n.appendChild(c);const a=document.createElement("p");a.innerText=`Priority: ${e.priority}`,n.appendChild(a);const r=document.createElement("p");r.innerText=`notes: ${e.notes}`,n.appendChild(r);const i=document.createElement("form"),l=document.createElement("label");l.setAttribute("for","projects"),l.innerText="choose project: ";const p=document.createElement("select");p.setAttribute("name","projects"),p.setAttribute("id","projects"),p.classList.add("select"),t.forEach((e=>{console.log(e.name);const t=document.createElement("option");t.classList.add("option"),t.setAttribute("value",`${e.name}`),t.innerText=`${e.name}`,p.appendChild(t)})),i.onchange=function(t){t.preventDefault();const o=t.target.value;e.project=o;const n=toDos.findIndex((t=>t.title===e.title));toDos[n]=e,toDosUpdated=toDos,console.log(toDosUpdated)},i.appendChild(l),i.appendChild(p),n.appendChild(i),o.appendChild(n)}e.r(t),e.d(t,{Z:()=>o});const n=[],s=[];class d{constructor(e,t,o,n,d){this.title=e,this.description=t,this.dueDate=o,this.priority=n,this.notes=d,this.project="any",s.push({...this})}}class c{constructor(e){this.name=e,n.push(this),function(e){console.log(e),console.log(t.toDosUpdated);const o=document.querySelector(".projectsContainer");o&&o.remove();const n=document.createElement("div");n.classList.add("projectsContainer"),e.forEach((e=>{const t=document.createElement("button");t.innerText=e.name,t.classList.add("projectBtn"),n.appendChild(t)})),document.querySelector("#root").appendChild(n)}(n)}}o(new d("asd","asd","asd","asd","asd"),n),o(new d("asd2","asd2","asd2","asd2","asd2"),n),o(new d("asd3","asd3","asd3","asd3","asd3"),n),new c("wtf"),new c("wtf2"),new c("wtf3"),new c("wtf4"),console.log(toDosUpdated)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,