(()=>{"use strict";const e=function(){function e(){let e=document.querySelectorAll(".form");console.log(e),e.length>0&&e.forEach((e=>{e.remove()}))}return{projectForm:function(){e();let t=document.createElement("form");t.classList.add("form");let n=document.createElement("input");n.setAttribute("id","project-name"),n.setAttribute("type","text"),n.setAttribute("name","project");let o=document.createElement("label");o.setAttribute("for","project-name"),o.innerText="Project name: ";let i=document.createElement("input");return i.setAttribute("type","submit"),i.innerText="Submit Project",t.appendChild(o),t.appendChild(n),t.appendChild(i),t},toDoForm:function(){e();let t=document.createElement("form");t.classList.add("form");let n=document.createElement("div"),o=document.createElement("label");o.setAttribute("for","title"),o.innerText="Title: ";let i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("name","title"),i.setAttribute("id","title"),i.setAttribute("required",!0),n.appendChild(o),n.appendChild(i);let r=document.createElement("div"),c=document.createElement("select");c.setAttribute("id","select");let l=document.createElement("label");l.setAttribute("for","select"),l.innerText="Priority: ";let d=document.createElement("option");d.setAttribute("value","Low"),d.setAttribute("name","low"),d.setAttribute("selected",!0),d.setAttribute("required",!0),d.innerText="Low";let a=document.createElement("option");a.setAttribute("value","Mid"),a.setAttribute("name","mid"),a.setAttribute("required",!0),a.innerText="Mid";let s=document.createElement("option");s.setAttribute("value","High"),s.setAttribute("name","priority"),s.setAttribute("required",!0),s.innerText="High",r.appendChild(l),r.appendChild(c),c.appendChild(d),c.appendChild(a),c.appendChild(s),c.setAttribute("name","priority");let p=document.createElement("div"),m=document.createElement("label");m.setAttribute("for","description"),m.innerText="Description: ";let u=document.createElement("input");u.setAttribute("type","text"),u.setAttribute("name","description"),u.setAttribute("id","description"),p.appendChild(m),p.appendChild(u);let h=document.createElement("div"),b=document.createElement("label");b.setAttribute("for","date"),b.innerText="Due date: ";let E=document.createElement("input");E.setAttribute("type","date"),E.setAttribute("id","date"),E.setAttribute("name","date"),E.required=!0,h.appendChild(b),h.appendChild(E),document.createElement("div");let C=document.createElement("div");return t.appendChild(n),t.appendChild(r),t.appendChild(p),t.appendChild(h),t.appendChild(C),t}}}();(()=>{class t{constructor(e,t="no description",n,o,i="any"){this.title=e,this.description=t,this.dueDate=n,this.priority=o,this.project=i,this.any="any"}localStorageSet(){const e=JSON.parse(localStorage.getItem("todos"))||[];e.push({...this}),localStorage.setItem("todos",JSON.stringify(e))}removeFromLs(){let e=JSON.parse(localStorage.getItem("todos"));e||(e=[]);let t=this.title;const n=e.findIndex((e=>e.title===t));n>-1&&(e.splice(n,1),localStorage.setItem("todos",JSON.stringify(e))),l=[],o()}}class n{constructor(e){this.name=e,c.push(this)}setProjectInLs(){console.log("asdeano");const e=JSON.parse(localStorage.getItem("projects"))||[];e.push(this),localStorage.setItem("projects",JSON.stringify(e)),console.log(e)}}function o(){r=JSON.parse(localStorage.getItem("todos"))||[];let e=[];r.length>0&&r.forEach((n=>{let o=Object.assign(new t,n);e.push(o),l=e,d=e}))}let i,r,c=[],l=[],d=[];o(),i=JSON.parse(localStorage.getItem("projects"))||[],c=i;const a=document.createElement("section");a.classList.add("projectsSection"),root.appendChild(a);const s=document.createElement("section");s.classList.add("navBar");const p=document.createElement("button");p.innerText="NEW PROJECT",p.setAttribute("name","newProject"),p.onclick=u;const m=document.createElement("button");function u(o){if(o.preventDefault,"newProject"===o.target.getAttribute("name")){let t=e.projectForm();t.onsubmit=e=>{e.preventDefault();let o=t.elements.project.value;new n(o).setProjectInLs(),E(c,l),b(c,l)},root.appendChild(t)}else{let n=e.toDoForm();const o=document.createElement("div"),i=document.createElement("label");i.innerText="Project ";const r=document.createElement("select");r.setAttribute("name","project"),c.forEach((e=>{let t=document.createElement("option");t.innerText=`${e.name}`,r.appendChild(t)}));const d=document.createElement("input");d.setAttribute("type","submit"),d.innerText="Add To-Do",n.appendChild(o),o.appendChild(i),o.appendChild(r),n.appendChild(d),root.appendChild(n),n.onsubmit=e=>{e.preventDefault();let o=n.elements.date.value,i=n.elements.title.value,r=n.elements.description.value,d=n.elements.priority.value,a=n.elements.project.value,s=new t(i,r,o,d,a);s.localStorageSet(),l.push(s),b(c,l)}}}m.setAttribute("name","newToDo"),m.innerText="NEW TO-DO",m.onclick=u,s.appendChild(p),s.appendChild(m),root.appendChild(s);const h=document.createElement("section");function b(e,t){o();const n=document.querySelector(".toDoArticle");n&&n.remove();const i=document.createElement("article");i.classList.add("toDoArticle"),t.forEach((n=>{const r=document.createElement("div");r.classList.add("toDoCard");const c=document.createElement("h2");c.innerText=`${n.title}`,r.appendChild(c);const l=document.createElement("p");l.innerText=`Due date: ${n.dueDate}`,r.appendChild(l);const a=document.createElement("button");if(a.innerText="Remove To-Do",a.onclick=()=>{r.remove(),n.removeFromLs(),o()},r.appendChild(a),"any"!==n.project){const e=document.createElement("p");e.classList.add("project"),e.innerText=`Assigned project: ${n.project}`,r.appendChild(e)}!function e(){const t=document.createElement("button");t.classList.add("details"),t.innerText="Details",t.onclick=function(){r.appendChild(s),r.appendChild(p),m.appendChild(u),m.appendChild(E);document.querySelector(".details").remove();const t=document.createElement("button");t.innerText="Go Back",r.appendChild(t),t.onclick=()=>{document.querySelector(".project").remove(),p.remove(),u.remove(),E.remove(),t.remove(),e()}},r.appendChild(t)}();const s=document.createElement("p");""!==n.description?s.innerText=`description: ${n.description}`:s.innerText="No description";const p=document.createElement("p");p.innerText=`Priority: ${n.priority}`;const m=document.createElement("form"),u=document.createElement("label");u.setAttribute("for","projects"),u.innerText="choose project: ";const E=document.createElement("select");E.setAttribute("name","projects"),E.setAttribute("id","projects"),E.classList.add("select");const C=document.createElement("option");C.classList.add("option"),C.setAttribute("value","any"),C.innerText="Any",E.appendChild(C),e.forEach((e=>{const t=document.createElement("option");t.classList.add("option"),t.setAttribute("value",`${e.name}`),t.innerText=`${e.name}`,E.appendChild(t)})),m.onchange=function(o){const i=o.target.value;if(n.project=i,d){const o=d.findIndex((e=>e.title===n.title));t[o]=n,d=t,b(e,d)}const r=t.findIndex((e=>e.title===n.title));t[r]=n,d=t},r.appendChild(m),i.appendChild(r),h.appendChild(i)}))}function E(e,t){const n=document.querySelector(".projectsContainer");n&&n.remove();const o=document.createElement("div");o.classList.add("projectsContainer");const i=document.createElement("button");if(i.innerText="Any",i.classList.add("projectBtn"),i.setAttribute("any","any"),i.addEventListener("click",(()=>{let n=t.filter((e=>"any"===e.any));b(e,n)})),o.appendChild(i),e.length>0){function r(n){n.preventDefault;let o=n.target.getAttribute("project-name"),i=t.filter((e=>e.project===o));b(e,i)}e.forEach((e=>{const t=document.createElement("button");t.innerText=e.name,t.classList.add("projectBtn"),t.addEventListener("click",r),t.setAttribute("project-name",e.name),o.appendChild(t)}))}a.appendChild(o)}h.classList.add("toDosSection"),root.appendChild(h),E(c,l),b(c,l)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,