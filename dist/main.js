(()=>{"use strict";const e=function(){function e(){let e=document.querySelectorAll(".form");console.log(e),e.length>0&&e.forEach((e=>{e.remove()}))}return{projectForm:function(){e();let t=document.createElement("form");return t.classList.add("form"),t},toDoForm:function(){e();let t=document.createElement("form");t.classList.add("form");let n=document.createElement("div"),o=document.createElement("label");o.setAttribute("for","title"),o.innerText="Title: ";let r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("id","title"),r.setAttribute("required",!0),n.appendChild(o),n.appendChild(r);let c=document.createElement("div"),i=document.createElement("select");i.setAttribute("id","select");let d=document.createElement("label");d.setAttribute("for","select"),d.innerText="Priority: ";let a=document.createElement("option");a.setAttribute("value","Low"),a.setAttribute("selected",!0),a.setAttribute("required",!0),a.innerText="Low";let l=document.createElement("option");l.setAttribute("value","Mid"),l.setAttribute("required",!0),l.innerText="Mid";let s=document.createElement("option");s.setAttribute("value","High"),s.setAttribute("required",!0),s.innerText="High",c.appendChild(d),c.appendChild(i),i.appendChild(a),i.appendChild(l),i.appendChild(s);let p=document.createElement("div"),u=document.createElement("label");u.setAttribute("for","description"),u.innerText="Description: ";let m=document.createElement("input");m.setAttribute("type","text"),m.setAttribute("id","description"),p.appendChild(u),p.appendChild(m);let h=document.createElement("div"),E=document.createElement("label");E.setAttribute("for","date"),E.innerText="Due date: ";let C=document.createElement("input");C.setAttribute("type","date"),C.setAttribute("id","date"),C.setAttribute("name","date"),h.appendChild(E),h.appendChild(C),document.createElement("div");let b=document.createElement("div");return t.appendChild(n),t.appendChild(c),t.appendChild(p),t.appendChild(h),t.appendChild(b),t}}}();(()=>{const t=[],n=[];let o=[];const r=document.createElement("section");r.classList.add("projectsSection"),root.appendChild(r);const c=document.createElement("section");c.classList.add("navBar");const i=document.createElement("button");i.innerText="NEW PROJECT",i.setAttribute("name","newProject"),i.onclick=a;const d=document.createElement("button");function a(n){n.preventDefault;let o=n.target.getAttribute("name");if(console.log(o),"newProject"===o){let t=e.projectForm();root.appendChild(t)}else{let n=e.toDoForm();const o=document.createElement("div"),r=document.createElement("label");r.innerText="Project ";const c=document.createElement("select");t.forEach((e=>{let t=document.createElement("option");t.innerText=`${e.name}`,c.appendChild(t)})),n.appendChild(o),o.appendChild(r),o.appendChild(c),root.appendChild(n)}}d.setAttribute("name","newToDo"),d.innerText="NEW TO-DO",d.onclick=a,c.appendChild(i),c.appendChild(d),root.appendChild(c);const l=document.createElement("section");l.classList.add("toDosSection"),root.appendChild(l);class s{constructor(e,t,o,r){this.title=e,this.description=t,this.dueDate=o,this.priority=r,this.project="any",this.any="any",n.push({...this})}}class p{constructor(e){this.name=e,t.push(this)}}function u(e,t){document.querySelector("#root");const n=document.querySelector(".toDoArticle");n&&n.remove();const r=document.createElement("article");r.classList.add("toDoArticle"),t.forEach((n=>{const c=document.createElement("div");c.classList.add("toDoCard");const i=document.createElement("h2");i.innerText=`${n.title}`,c.appendChild(i);const d=document.createElement("p");d.innerText=`description: ${n.description}`,c.appendChild(d);const a=document.createElement("p");a.innerText=`Due date: ${n.dueDate}`,c.appendChild(a);const s=document.createElement("p");s.innerText=`Priority: ${n.priority}`,c.appendChild(s);const p=document.createElement("form"),u=document.createElement("label");u.setAttribute("for","projects"),u.innerText="choose project: ";const h=document.createElement("select");h.setAttribute("name","projects"),h.setAttribute("id","projects"),h.classList.add("select");const E=document.createElement("option");E.classList.add("option"),E.setAttribute("value","any"),E.innerText="Any",h.appendChild(E),e.forEach((e=>{const t=document.createElement("option");t.classList.add("option"),t.setAttribute("value",`${e.name}`),t.innerText=`${e.name}`,h.appendChild(t)})),p.onchange=function(r){const c=r.target.value;n.project=c;const i=t.findIndex((e=>e.title===n.title));t[i]=n,o=t,m(e,o)},p.appendChild(u),p.appendChild(h),c.appendChild(p),r.appendChild(c),l.appendChild(r)}))}function m(e,n){const o=document.querySelector(".projectsContainer");o&&o.remove();const c=document.createElement("div");c.classList.add("projectsContainer");const i=document.createElement("button");if(i.innerText="Any",i.classList.add("projectBtn"),i.setAttribute("any","any"),i.addEventListener("click",(()=>{let e=n.filter((e=>"any"===e.any));u(t,e)})),c.appendChild(i),e.length>0){function d(e){e.preventDefault;let o=e.target.getAttribute("project-name"),r=n.filter((e=>e.project===o));u(t,r)}e.forEach((e=>{const t=document.createElement("button");t.innerText=e.name,t.classList.add("projectBtn"),t.addEventListener("click",d),t.setAttribute("project-name",e.name),c.appendChild(t)}))}r.appendChild(c)}new s("watarfo","watarfo","watarfo","watarfo"),new s("watarfo2","watarfo2","watarfo2","watarfo2"),new p("proyecto 1"),new p("proyecto 2"),m(t,n),u(t,n)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,