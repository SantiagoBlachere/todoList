(()=>{"use strict";function e(e,t){const n=document.querySelector("#root"),o=document.createElement("div");o.classList.add("toDoCard");const c=document.createElement("h2");c.innerText=`${e.title}`,o.appendChild(c);const s=document.createElement("p");s.innerText=`description: ${e.description}`,o.appendChild(s);const d=document.createElement("p");d.innerText=`Due date: ${e.dueDate}`,o.appendChild(d);const r=document.createElement("p");r.innerText=`Priority: ${e.priority}`,o.appendChild(r);const a=document.createElement("p");a.innerText=`notes: ${e.notes}`,o.appendChild(a);const i=document.createElement("form"),l=document.createElement("label");l.setAttribute("for","projects"),l.innerText="choose project: ";const p=document.createElement("select");p.setAttribute("name","projects"),p.setAttribute("id","projects"),p.classList.add("select"),t.forEach((e=>{const t=document.createElement("option");t.classList.add("option"),t.setAttribute("value",`${e.project}`),t.innerText=`${e.project}`,p.appendChild(t)})),i.querySelectorAll(".option"),i.onchange=function(t){t.preventDefault();const n=t.target.value;e.project=n},i.appendChild(l),i.appendChild(p),o.appendChild(i),n.appendChild(o)}const t=[],n=[];class o{constructor(e,t,o,c,s){this.title=e,this.description=t,this.dueDate=o,this.priority=c,this.notes=s,n.push({...this})}}class c{constructor(e){this.project=e,t.push(this.project),function(e,t){console.log(t),t.forEach((e=>{console.log(e.title)}));const n=document.querySelector(".projectsContainer");n&&n.remove();const o=document.createElement("div");o.classList.add("projectsContainer"),e.forEach((e=>{const t=document.createElement("button");t.innerText=e,o.appendChild(t)})),document.querySelector("#root").appendChild(o)}(t,n)}}new c("wtf"),new c("wtf2"),new c("wtf3"),new c("wtf4"),e(new o("asd","asd","asd","asd","asd"),t),e(new o("asd2","asd2","asd2","asd2","asd2"),t),e(new o("asd3","asd3","asd3","asd3","asd3"),t)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,